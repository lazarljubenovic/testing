# hostname of your service
# (supports monorepositories! just add
# one service section after the other)
staticserver0:
  # ==== how to build your application ====
  build:
    # select what technology should the
    # build container be based on, can
    # be different from service technology
    # see docs for full list
    base: [ nodejs@18 ]

    # *optional* add additional dependencies
    # on top of base technology (combination
    # will be cached for next build)
    # prepare:
    #   - apt-get something
    #   - curl otherthing

    # build your application
    build:
      - echo "yay"
      # - npm i
      # - npm run build

    # select which files / folders to deploy
    # after the build succesfully finished
    # `~` can be used to mark starting point
    # of deploy path, this example would deploy
    # files in folder dist without the folder
    # itself, either way make sure your nginx
    # config points to the correct folder
    deploy: [ '~' ]

    # *optional*: which files / folders
    # to cache for the next use
    # cache: [ node_modules ]

  # ==== how to run your application ====
  # (usually no changes needed for a static server)
  #run:
    # *optional* install dependencies that your
    # runtime service requires (will be cached)
    # prepare:
    #   - apt-get something
    #   - curl otherthing

    # *optional*: triggered before each start/restart
    # of your application, to eg. clean cache
    # init:
    #  - rm -rf ./cache
